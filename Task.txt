Задание: Разработать микросервисную архитектуру с использованием Docker Compose, которая включает в себя следующие компоненты:

1. Шлюз (Gateway) – сервис, который будет принимать HTTP-запросы от клиентов и маршрутизировать их к соответствующим внутренним сервисам.
2. Domain-сервис – сервис, предоставляющий API для выполнения операций создания, чтения, обновления и удаления данных (CRUD). Сервис должен взаимодействовать с шлюзом через gRPC-протокол.
3. Redis – кэширующий сервер для хранения временных данных и ускорения работы системы.
4. ELK – набор инструментов для логирования и анализа событий в системе (OpenSearch, Logstash, Kibana).
5. Prometheus + Grafana – инструменты для мониторинга производительности и состояния системы.
6. База данных –MongoDB.

Требования к решению
1. Gateway:
   - Должен предоставлять RESTful API для внешних запросов.
   - Маршрутизация запросов к сервису CRUD должна осуществляться через gRPC.
   - Логирование всех входящих и исходящих запросов должно быть настроено с помощью ELK
   - Кеширование GET-запросов должно быть реализовано с использованием Redis.
   - Сбор метрик о работе шлюза должен производиться с помощью Prometheus и визуализироваться в Grafana.

2. Domain-сервис:
   - Реализация CRUD-операций через gRPC.
   - Операции GET должны обрабатываться синхронно.
   - Операции PUT, POST, DELETE должны отправляться асинхронно через очередь сообщений RabbitMQ.
   - Взаимодействие с базой данных (PostgreSQL/MongoDB) для хранения данных.

3. Redis:
   - Настроить Redis-контейнер для использования в качестве кеша.
   - Реализовать механизм кеширования GET-запросов в шлюзе.

4. RabbitMQ:
   - Настройка очереди сообщений для обработки асинхронных операций.
   - Обеспечение надежной доставки сообщений между шлюзом и сервисом CRUD.

5. ELK Stack:
   - Настройка OpenSearch для индексации логов.
   - Конфигурация Logstash для сбора и обработки логов из шлюза.
   - Развертывание Kibana для визуализации логов и анализа данных.

6. Prometheus + Grafana:
   - Настройка Prometheus для сбора метрик из шлюза.
   - Создание дашбордов в Grafana для визуализации собранных метрик.

7. База данных:
   - Настройка базы данных для хранения данных, используемых сервисом CRUD.
   - Предоставление интерфейса администрирования для управления данными (MongoExpress для MongoDB). 
Предметная область
1. Клиенты: Создание таблицы для хранения информации о клиентах (имя, фамилия, адрес, телефон).

docker-compose up --build

http://localhost:8080/clients

{
    "first_name": "Din",
    "last_name": "Doe",
    "address": "123 Elm Street",
    "phone": "555-1234"
}

http://localhost:8080/clients/677a7b1a35078d79a58c908b